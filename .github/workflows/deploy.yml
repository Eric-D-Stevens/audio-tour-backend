name: Deploy Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
    
    #- name: Run tests
    #- run: pytest
    
    - name: Generate version string
      id: version
      run: echo "VERSION=$(date +%s)" >> $GITHUB_ENV
    
    - name: Package Lambda functions
      run: |
        mkdir -p dist
        
        # Geolocation Lambda
        mkdir -p build/geolocation
        cp -r lambda/geolocation/* build/geolocation/
        pip install -r lambda/geolocation/requirements.txt -t build/geolocation/
        cd build/geolocation && zip -r ../../dist/geolocation-${VERSION}.zip . && cd ../..
        
        # Audio Generation Lambda
        mkdir -p build/audio-generation
        cp -r lambda/audio-generation/* build/audio-generation/
        pip install -r lambda/audio-generation/requirements.txt -t build/audio-generation/
        cd build/audio-generation && zip -r ../../dist/audio-generation-${VERSION}.zip . && cd ../..
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Upload Lambda packages to S3
      run: |
        # Upload versioned packages
        aws s3 cp dist/geolocation-${VERSION}.zip s3://${{ secrets.LAMBDA_BUCKET_NAME }}/
        aws s3 cp dist/audio-generation-${VERSION}.zip s3://${{ secrets.LAMBDA_BUCKET_NAME }}/
        
        # Also upload non-versioned copies for manual deployments
        aws s3 cp dist/geolocation-${VERSION}.zip s3://${{ secrets.LAMBDA_BUCKET_NAME }}/geolocation.zip
        aws s3 cp dist/audio-generation-${VERSION}.zip s3://${{ secrets.LAMBDA_BUCKET_NAME }}/audio-generation.zip
        
        # Also upload a version.json file with the current version
        echo '{"version": "'${VERSION}'"}' > version.json
        aws s3 cp version.json s3://${{ secrets.LAMBDA_BUCKET_NAME }}/
    
    - name: Trigger Infrastructure Deploy
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.WORKFLOW_PAT }}
        repository: ${{ github.repository_owner }}/audio-tour-infrastructure
        event-type: lambda-changed
        client-payload: |
          {
            "version": "${{ env.VERSION }}",
            "geolocation_lambda": "geolocation-${{ env.VERSION }}.zip",
            "audio_generation_lambda": "audio-generation-${{ env.VERSION }}.zip"
          }